@using MyShop.MyFolder
@using MyShop.ViewModels

@model GoodPaginatedListViewModel

@{
    ViewData["Title"] = "Index";
}

<div style="padding: 10px">
    <h1>Goods</h1>

    <div>
        <p style="display: inline">
            <a class="btn btn-primary" asp-controller="Users" asp-action="Details" asp-route-id="@CurrentUser.currentUser.Email">View my profile</a>
        </p>
        <p style="display: inline">
            <a class="btn btn-primary" asp-controller="Goods" asp-action="MyGoods" asp-route-id="@CurrentUser.currentUser.Email">View my goods</a>
        </p>
    </div>

    <form asp-action="Index" method="get">
        <div class="form-actions no-color">
        <p>
            Filter by category name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
    </form>

    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]">@Html.DisplayNameFor(model => model.good.Name)</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParam"]">@Html.DisplayNameFor(model => model.good.Price)</a>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.good.Quantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.good.ShortDesc)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.good.AuthorMail)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.good.Category)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model.goods) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ShortDesc)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AuthorMail)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    <a class="btn btn-primary" asp-action="Details" asp-route-id="@item.ID">Details</a>
                    <a class="btn btn-primary" asp-controller="Users" asp-action="DetailsAboutOthers" asp-route-id="@item.AuthorMail">Owner</a>
                    <a class="btn btn-primary" asp-controller="Cart" asp-action="Add" asp-route-id="@item.ID">To cart</a>
                </td>
            </tr>
    }
        </tbody>
    </table>
    @{
    var prevDisabled = !Model.listGood.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.listGood.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index"
        asp-route-sortOrder="@ViewData["CurrentSort"]"
        asp-route-pageNumber="@(Model.listGood.PageIndex - 1)"
        class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
        asp-route-sortOrder="@ViewData["CurrentSort"]"
        asp-route-pageNumber="@(Model.listGood.PageIndex + 1)"
        class="btn btn-default @nextDisabled">
        Next
    </a>
</div>
